<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:customControls="clr-namespace:MW5_Mod_Organizer_WPF.CustomControls"
                    xmlns:icon="http://metro.mahapps.com/winfx/xaml/iconpacks">
    <Style TargetType="{x:Type customControls:SettingsButton}">
        <Setter Property="Foreground" Value="#484D54"/>
        <Setter Property="Content" Value="Sample"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type customControls:SettingsButton}">
                    <Grid VerticalAlignment="Center" HorizontalAlignment="Center">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="60"/>
                            <RowDefinition Height="20"/>
                            <RowDefinition Height="10"/>
                        </Grid.RowDefinitions>
                        <Border Background="Transparent" Grid.Row="0">
                            <icon:PackIconMaterial Kind="{Binding Icon, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type customControls:SettingsButton}}}" Style="{DynamicResource settingsButtonIcon}"/>
                        </Border>
                        <TextBlock Text="{TemplateBinding Content}" FontWeight="SemiBold" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Center" Grid.Row="1"/>
                        <Separator Background="#ED552F" Grid.Row="2" Visibility="{Binding LineVisibility, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type customControls:SettingsButton}}}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#ED552F"/>
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Margin" Value="0 5 0 0"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="LineVisibility" Value="Visible"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="settingsButtonIcon" TargetType="icon:PackIconMaterial">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type customControls:SettingsButton}}}"/>
    </Style>

    <Style TargetType="{x:Type customControls:TextBoxControl}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type customControls:TextBoxControl}">
                    <Border Background="#f7f5f2" Height="{TemplateBinding Height}">
                        <Grid>
                            <Rectangle StrokeThickness="1"/>

                            <TextBox x:Name="FilePathBox" Text="{Binding Text, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type customControls:TextBoxControl}}, UpdateSourceTrigger=PropertyChanged}" BorderThickness="0" Background="Transparent" VerticalContentAlignment="Center" FontSize="{TemplateBinding FontSize}" Foreground="#FF6F6F6F" Margin="10 0 0 0">

                                <TextBox.ContextMenu>
                                    <ContextMenu Visibility="Collapsed"/>
                                </TextBox.ContextMenu>

                            </TextBox>

                            <TextBlock Text="{Binding PlaceholderText, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type customControls:TextBoxControl}}}" IsHitTestVisible="False" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10 0 0 0" FontSize="{TemplateBinding FontSize}" Foreground="#FFA2A2A2">

                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Text, ElementName=FilePathBox}" Value="">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
