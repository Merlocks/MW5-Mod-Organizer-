<Window x:Class="MW5_Mod_Organizer_WPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
        xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:MW5_Mod_Organizer_WPF.ViewModels"
        mc:Ignorable="d" 
        FontSize="14"
        Title="MW5 Mod Organizer" 
        Height="720" 
        Width="1080" 
        Background="#D1C9C9" 
        WindowStartupLocation="CenterOwner"
        UseLayoutRounding="True" 
        Icon="/favicon.ico">
    <behaviors:Interaction.Triggers>
        <behaviors:EventTrigger EventName="Loaded">
            <behaviors:InvokeCommandAction Command="{Binding LoadedCommand}"/>
        </behaviors:EventTrigger>
    </behaviors:Interaction.Triggers>
    <Grid>
        <!--Grid definitions-->
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="150"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="100"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        
        <!--Taskbar-->
        <StackPanel Orientation="Vertical"
                    Grid.Row="2"
                    Grid.Column="0"
                    Grid.ColumnSpan="3">
            <ContentControl Style="{StaticResource DeploymentReminder}"/>
            <StackPanel Margin="10, 10, 0, 0"
                        Orientation="Horizontal">
                <TextBox x:Name="TextBoxGameVersion"
                         Text="{Binding GameVersion, UpdateSourceTrigger=PropertyChanged}"
                         Height="25"
                         VerticalContentAlignment="Center"
                         HorizontalAlignment="Left"
                         VerticalAlignment="Center"
                         Style="{StaticResource TextBoxGameVersionTheme}">
                </TextBox>
                <Button Command="{Binding ArrowUpCommand}">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <ContentPresenter/>
                        </ControlTemplate>
                    </Button.Template>
                    <TextBlock Text="&#x1F81D;"
                               FontSize="25"
                               Margin="20 0 0 0"
                               Cursor="Hand">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Foreground" Value="#484D54"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Foreground" Value="#F7F5F2"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Button>
                <Button Command="{Binding ArrowDownCommand}">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <ContentPresenter/>
                        </ControlTemplate>
                    </Button.Template>
                    <TextBlock Text="&#x1F81F;"
                               FontSize="25"
                               Margin="20 0 0 0"
                               Cursor="Hand">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Foreground" Value="#484D54"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Foreground" Value="#F7F5F2"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Button>
                <Button Content="Deploy"
                        Height="25"
                        Margin="10 0 0 0"
                        Command="{Binding DeployCommand}"
                        Style="{DynamicResource StandaloneButtonTheme}"/>
                <Button Content="Undo"
                        Height="25"
                        Margin="10 0 0 0"
                        Command="{Binding UndoCommand}"
                        Style="{DynamicResource StandaloneButtonTheme}"/>
                <Button Content="Clear"
                        Height="25"
                        Margin="10 0 0 0"
                        Command="{Binding ClearCommand}"
                        Style="{DynamicResource StandaloneButtonTheme}"/>
                <Button Content="Reset to defaults"
                        Height="25"
                        Margin="10 0 0 0"
                        Command="{Binding ResetToDefaultCommand}"
                        Style="{DynamicResource StandaloneButtonTheme}"/>
                <TextBlock Text="[Loading]"
                           Foreground="#484D54"
                           FontSize="13"
                           Margin="50 0 10 0"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsLoading}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsLoading}" Value="False">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <TextBlock Text="{Binding LoadingContext}"
                           Foreground="#484D54"
                           FontSize="11"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"
                           Margin="0 3 0 0">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsLoading}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsLoading}" Value="False">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </StackPanel>
        </StackPanel>

        <!--Grid Mod List-->
        <Border Grid.Column="0"
                Grid.ColumnSpan="2"
                Grid.Row="3" 
                Background="#f7f5f2" 
                BorderThickness="0" 
                Margin="10">
            <DataGrid x:Name="ModList" 
                      ItemsSource="{Binding Mods}"
                      Style="{DynamicResource DataGridStyle1}" 
                      CellStyle="{DynamicResource DataGridCellStyle1}" 
                      ColumnHeaderStyle="{DynamicResource DataGridColumnHeaderStyle1}" 
                      RowStyle="{DynamicResource DataGridRowStyle1}"
                      RowDetailsTemplate="{DynamicResource DataGridRowDetailsTemplate1}"
                      Margin="10" 
                      Background="Transparent" 
                      BorderBrush="Transparent"
                      BorderThickness="1"
                      dd:DragDrop.IsDragSource="True" 
                      dd:DragDrop.IsDropTarget="True" 
                      dd:DragDrop.SelectDroppedItems="True" 
                      dd:DragDrop.DropHandler="{Binding}" 
                      dd:DragDrop.DropTargetAdornerBrush="#484D54"
                      VirtualizingPanel.VirtualizationMode="Recycling">
                <behaviors:Interaction.Triggers>
                    <behaviors:EventTrigger EventName="SelectionChanged">
                        <behaviors:InvokeCommandAction Command="{Binding ModsOverviewSelectionChangedCommand}" PassEventArgsToCommand="True"/>
                    </behaviors:EventTrigger>
                </behaviors:Interaction.Triggers>
                <DataGrid.Columns>
                    <DataGridTemplateColumn MinWidth="50">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox x:Name="CheckBoxIsEnabled"
                                          IsChecked="{Binding IsEnabled, UpdateSourceTrigger=PropertyChanged}"
                                          Command="{Binding DataContext.ToggleCheckBoxCommand, RelativeSource={RelativeSource AncestorType=Window}}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="Loadorder" 
                                        IsReadOnly="True" 
                                        MinWidth="100" 
                                        Binding="{Binding LoadOrder, UpdateSourceTrigger=PropertyChanged}" 
                                        CanUserSort="False"/>
                    <DataGridTextColumn Header="Mod" 
                                        IsReadOnly="True" 
                                        MinWidth="250" 
                                        Binding="{Binding DisplayName}" 
                                        CanUserSort="False"/>
                    <DataGridTextColumn Header="Author" 
                                        IsReadOnly="True" 
                                        MinWidth="200" 
                                        Binding="{Binding Author}" 
                                        CanUserSort="False"/>
                    <DataGridTextColumn Header="Version" 
                                        IsReadOnly="True" 
                                        Width="*"
                                        MinWidth="100"
                                        Binding="{Binding Version}" 
                                        CanUserSort="False"/>
                </DataGrid.Columns>
            </DataGrid>
        </Border>
        
        <!--Header-->
        <Border Grid.Column="0"
                Grid.ColumnSpan="10"
                Grid.Row="1"
                Background="#E0D7D7">
            <Border.Effect>
                <DropShadowEffect BlurRadius="10" Color="Black" ShadowDepth="5" Direction="270" Opacity="0.1"/>
            </Border.Effect>
        </Border>
        

        <!--Conflict window-->
        <StackPanel Orientation="Horizontal"
                    Grid.Column="2"
                    Grid.Row="2"
                    Grid.RowSpan="3">
            <ToggleButton x:Name="ToggleButtonConflictWindow"
                          Click="ToggleButtonConflictWindow_Click"
                          Style="{StaticResource ButtonConflictWindowSlider}"/>
            <Border x:Name="BorderConflictWindow"
                    Background="#E0D7D7"
                    Visibility="Collapsed">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition x:Name="resizableColumn" 
                                          Width="300"
                                          MinWidth="200"
                                          MaxWidth="500"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="10"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="10"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="10"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="10"/>
                    </Grid.RowDefinitions>

                    <Border Grid.Row="0"
                            Grid.RowSpan="2"
                            Background="#FFC1C1C1"
                            BorderBrush="#FFADADAD"
                            BorderThickness="0 0 3 4"
                            Margin="0 0 10 0">
                    </Border>

                    <TextBlock Grid.Row="0"
                               Text="Conflict window"
                               TextOptions.TextFormattingMode="Display"
                               FontWeight="Bold"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Foreground="#484D54"
                               Margin="0 5 0 0"/>
                    <!--Overwrites window-->
                    <Border Grid.Row="2"
                            Grid.Column="0"
                            Background="#f7f5f2"
                            Margin="0 0 10 0">
                        <DataGrid x:Name="DataGridOverwrites"
                                  ItemsSource="{Binding Overwrites}"
                                  Style="{DynamicResource DataGridStyle1}" 
                                  CellStyle="{DynamicResource DataGridCellStyle1}" 
                                  ColumnHeaderStyle="{DynamicResource DataGridColumnHeaderStyle1}" 
                                  RowStyle="{DynamicResource DataGridConflictRowStyle1}" 
                                  Margin="10" 
                                  Background="Transparent" 
                                  BorderBrush="Transparent"
                                  SelectionChanged="DataGridOverwrites_SelectionChanged" 
                                  SelectionMode="Single">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Overwrites.."
                                                    Width="*"
                                                    IsReadOnly="True"
                                                    CanUserSort="False"
                                                    Binding="{Binding DisplayName}"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Border>
                    <!--Overwritten window-->
                    <Border Grid.Row="4"
                            Grid.Column="0"
                            Background="#f7f5f2"
                            Margin="0 0 10 0">
                        <DataGrid x:Name="DataGridOverwrittenBy"
                                  ItemsSource="{Binding OverwrittenBy}"
                                  Style="{DynamicResource DataGridStyle1}" 
                                  CellStyle="{DynamicResource DataGridCellStyle1}" 
                                  ColumnHeaderStyle="{DynamicResource DataGridColumnHeaderStyle1}" 
                                  RowStyle="{DynamicResource DataGridConflictRowStyle1}" 
                                  Margin="10" 
                                  Background="Transparent" 
                                  BorderBrush="Transparent"
                                  SelectionChanged="DataGridOverwrittenBy_SelectionChanged"
                                  SelectionMode="Single">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Overwritten by.."
                                                    Width="*"
                                                    IsReadOnly="True" 
                                                    CanUserSort="False"
                                                    Binding="{Binding DisplayName}"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Border>
                    <!--Manifest window-->
                    <Border Grid.Row="6"
                            Grid.Column="0"
                            Background="#f7f5f2"
                            Margin="0 0 10 0">
                        <DataGrid ItemsSource="{Binding Conflicts}" 
                                  Style="{DynamicResource DataGridStyle1}" 
                                  CellStyle="{DynamicResource DataGridCellStyle1}" 
                                  ColumnHeaderStyle="{DynamicResource DataGridColumnHeaderStyle1}" 
                                  RowStyle="{DynamicResource DataGridConflictRowStyle1}" 
                                  Margin="10" 
                                  Background="Transparent" 
                                  BorderBrush="Transparent">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Conflicts"
                                                    Width="auto"
                                                    IsReadOnly="True"
                                                    CanUserSort="False"
                                                    Binding="{Binding}"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Border>
                    
                    <Thumb x:Name="leftThumb"
                           Grid.Row="0"
                           Grid.RowSpan="10"
                           DragDelta="ResizeConflictWindow" 
                           Width="5"
                           HorizontalAlignment="Left" 
                           VerticalAlignment="Stretch"
                           Cursor="SizeWE"
                           Opacity="0"/>
                </Grid>
            </Border>

        </StackPanel>

        <Border Grid.Column="0"
                Grid.ColumnSpan="10"
                Grid.Row="1"
                Background="#E0D7D7">
        </Border>

        <!--Logo-->
        <Grid Grid.Row="1"
              Grid.Column="0">
            <TextBlock Text="MW5MO"
                       VerticalAlignment="Center" 
                       HorizontalAlignment="left"
                       Foreground="#69717d"
                       FontSize="22"
                       Margin="20, 0, 0, 0"
                       Visibility="Hidden"/>
            <Image Source="/logo2.png"
                   Height="40"
                   RenderOptions.BitmapScalingMode="Fant"/>
        </Grid>

        <!--File paths-->
        <StackPanel Orientation="Vertical"
                    Grid.Column="1"
                    Grid.ColumnSpan="2"
                    Grid.Row="1">
            <!--Primary mod folder-->
            <StackPanel Orientation="Horizontal"
                        HorizontalAlignment="Left"
                        Margin="0 15 0 0">
                <TextBox x:Name="TextBoxFileExplorer"
                         Text="{Binding PrimaryFolderPath, UpdateSourceTrigger=PropertyChanged}"
                         Width="500"
                         Height="25"
                         VerticalContentAlignment="Center"
                         HorizontalAlignment="Left"
                         Margin="10, 0, 0, 0"
                         IsReadOnly="True"
                         Style="{StaticResource TextBoxTheme}"/>
                <Button x:Name="ButtonOpenFolder" 
                        Content="Open primary folder"
                        Height="25"
                        VerticalAlignment="Center"
                        Margin="10 0 0 0" 
                        FontSize="14" 
                        FontWeight="Normal" 
                        Style="{StaticResource StandaloneButtonTheme}" 
                        Cursor="Hand"
                        Command="{Binding OpenPrimaryFolderPathCommand}"/>
            </StackPanel>
            <!--Secondary mod folder-->
            <StackPanel Orientation="Horizontal"
                        HorizontalAlignment="Left"
                        Margin="0 15 0 0">
                <TextBox x:Name="TextBoxSecondaryFileExplorer"
                         Text="{Binding SecondaryFolderPath, UpdateSourceTrigger=PropertyChanged}"
                         Width="400"
                         Height="25"
                         VerticalContentAlignment="Center"
                         Margin="10, 0, 0, 0"
                         IsReadOnly="True"
                         Style="{StaticResource TextBoxTheme}"/>
                <Button x:Name="ButtonOpenSecondaryFolder" 
                        Content="Open secondary folder"
                        Height="25"
                        VerticalAlignment="Center"
                        Margin="10, 0, 0, 0" 
                        FontSize="14" 
                        FontWeight="Normal" 
                        Style="{StaticResource StandaloneButtonTheme}"
                        Cursor="Hand"
                        Command="{Binding OpenSecondaryFolderPathCommand}"/>
            </StackPanel>
        </StackPanel>
        
        <!--File drop-->
        <ContentControl Grid.Column="0"
                        Grid.ColumnSpan="2"
                        Grid.Row="4">
            <ContentControl.Style>
                <Style TargetType="{x:Type ContentControl}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsZipDropVisible}" Value="False">
                            <Setter Property="Content">
                                <Setter.Value>
                                    <Button Content="Add Mod.."
                                            Style="{StaticResource ButtonAddModTheme}"
                                            Command="{Binding AddModButtonCommand}"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ContentControl.Style>
        </ContentControl>

        <!--Toolbar menu's-->
        <StackPanel Grid.Row="0" 
                    Grid.Column="0" 
                    Grid.ColumnSpan="3" 
                    Orientation="Horizontal"
                    Background="#E0D7D7">
            <Menu VerticalAlignment="Center"
                  Margin="5 0 0 0"
                  Padding="0 5"
                  Background="Transparent">
                <MenuItem Header="File"
                          FontSize="14"
                          Style="{StaticResource MenuItemContextTheme}">
                    <MenuItem Header="Save"
                              FontSize="12">
                        <MenuItem Header="As loadorder.txt" Command="{Binding ExportLoadorderCommand}"/>
                    </MenuItem>
                </MenuItem>
            </Menu>
            <Menu VerticalAlignment="Center"
                  Padding="0 5"
                  Background="Transparent">
                <MenuItem Header="Help"
                          FontSize="14"
                          Style="{StaticResource MenuItemContextTheme}">
                    <MenuItem Header="Visit on Nexus"
                              FontSize="12"
                              Command="{Binding VisitOnNexusCommand}"/>
                    <MenuItem Header="About MW5 Mod Organizer"
                              FontSize="12"/>
                </MenuItem>
            </Menu>
        </StackPanel>
        <Button Content="Update available!"
                Grid.Row="0"
                Grid.Column="0" 
                Grid.ColumnSpan="3"
                HorizontalAlignment="Right"
                Command="{Binding VisitOnNexusCommand}"/>
    </Grid>
</Window>
    

